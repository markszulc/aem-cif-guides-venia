version: 2.1

orbs:
  codecov: codecov/codecov@1.1.1

executors:
  cif_executor:
    docker:
      - image: circleci/openjdk:11-jdk-node

common:
  integration_test_steps: &integration_test_steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v2-<< parameters.classifier >>-its-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v2-<< parameters.classifier >>-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
      - attach_workspace:
          at: /home/circleci/build
      - run:
          name: Integration tests
          command: node .circleci/ci/it-tests.js
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v2-<< parameters.classifier >>-its-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
      - store_test_results:
          path: test-reports
      # Save test results as artifacts
      - store_artifacts:
          path: test-reports
      # Save AEM logs as artifacts
      - store_artifacts:
          path: logs

  docker_auth: &docker_auth
    auth:
      username: $DOCKER_USER
      password: $DOCKER_PASS

  install_components: &install_components
    run:
      name: Install CIF Components
      command: |
        if [[ "$CIRCLE_BRANCH" != "" && "$CIRCLE_BRANCH" != "main" ]]; then
          git clone https://github.com/adobe/aem-core-cif-components.git
          cd aem-core-cif-components
          components_branch=$(git ls-remote --heads origin ${CIRCLE_BRANCH})
          if [[ ! -z ${components_branch} ]]; then
            git fetch
            git checkout $CIRCLE_BRANCH
          fi
          mvn -B clean install
          cd react-components
          npm link
        fi
      working_directory: ./dependencies

jobs:
  build:
    executor: cif_executor
    working_directory: /home/circleci/build
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v2-cloud-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v2-cloud
            - maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }} 
            - maven-repo-v2-
      - run:
          name: Update permissions
          command: sudo chown -R circleci /usr/local/lib/node_modules
      - *install_components
      - run:
          name: Build
          command: |
            java -version
            mvn -v
            if [[ "$CIRCLE_BRANCH" != "" && "$CIRCLE_BRANCH" != "main" ]]; then
              mvn -B clean install -Pcloud,fedDev
            else
              mvn -B clean install
            fi
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v2-cloud-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /home/circleci/build
          paths:
            - all/target/*.zip
            - dependencies/aem-core-cif-components/examples/bundle/target/*.jar
      - store_test_results:
          path: core/target/surefire-reports
      - store_artifacts:
          path: core/target/surefire-reports
      - codecov/upload:
          flags: unittests

  build-classic:
    executor: cif_executor
    working_directory: /home/circleci/build
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v2-classic-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v2-classic-
            - maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v2-
      - run:
          name: Update permissions
          command: sudo chown -R circleci /usr/local/lib/node_modules
      - *install_components
      - run:
          name: Build
          command: |
            java -version
            mvn -v
            if [[ "$CIRCLE_BRANCH" != "" && "$CIRCLE_BRANCH" != "main" ]]; then
              mvn -B clean install -Pclassic,fedDev
            else
              mvn -B clean install -Pclassic
            fi
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v2-classic-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /home/circleci/build
          paths:
            - all/target/*.zip
            - dependencies/aem-core-cif-components/examples/bundle/target/*.jar

  integration-test-655:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem:6.5.5
        <<: *docker_auth
    environment:
      AEM: classic
      TYPE: integration
    parameters:
      classifier:
        default: "classic"
        type: string
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps
    
  integration-test-cloudready-with-addon:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem-cloudready:4271
        <<: *docker_auth
    environment:
      AEM: cloud
      TYPE: integration
    parameters:
      classifier:
        default: "cloud"
        type: string
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps

  selenium-chrome-cloudready-with-addon:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem-cloudready:4271
        <<: *docker_auth
    environment:
      AEM: cloud
      TYPE: selenium
      BROWSER: chrome
    parameters:
      classifier:
        default: "cloud"
        type: string
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps

  selenium-chrome-655:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem:6.5.5
        <<: *docker_auth
    environment:
      AEM: classic
      TYPE: selenium
      BROWSER: chrome
    parameters:
      classifier:
        default: "classic"
        type: string
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps

  start-magento:
    executor: cif_executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Start Magento and install sample content
          working_directory: .circleci
          command: bash install-magento.sh

  deploy-sample:
    executor: cif_executor

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v2-cloud-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v2-cloud-
            - maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v2-
      - run:
          name: Deploy Venia Sample Project to GitHub
          command: node .circleci/ci/deploy-venia.js

workflows:
  version: 2
  build-and-release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - build-classic:
          filters:
            tags:
              only: /.*/
      - start-magento:
          filters:
            tags:
              only: /.*/
      - deploy-sample:
          requires:
            - build
            - build-classic
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^venia(-classic)?-\d+\.\d+\.\d+$/
